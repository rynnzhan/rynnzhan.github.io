<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>已知url情况下的批量下载 in py</title>
    <link href="/2023/02/01/batch-downloader-py/"/>
    <url>/2023/02/01/batch-downloader-py/</url>
    
    <content type="html"><![CDATA[<p>今天需要从网上下载套图，写个py脚本，记录下思路。</p><h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>网上批量下载小偶像的摄影图，手动下载过于繁琐，当然Chrome和Edge浏览器有“Fatkun”及其类似的图片批量下载扩展可以使用。</p><p>由于需要下载的url非加密且极其具规律性，每张图片对应一个数字，过程非常简单。</p><p>通过python使用__wget包__进行下载是比较方便的一种方式。</p><h2 id="wget包"><a href="#wget包" class="headerlink" title="wget包"></a>wget包</h2><p>通过pip安装wget包<br><code>$ pip install wget</code></p><h2 id="代码部分"><a href="#代码部分" class="headerlink" title="代码部分"></a>代码部分</h2><p>代码部分变量只有两个:<br>    -<code>url</code>  图片的url<br>    -<code>path</code>  本地下载路径<br>由于具有规律性，一个<code>for</code>循环就可以解决问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> wget<br><br>limit = <span class="hljs-number">51</span> <span class="hljs-comment">#下载数量上限</span><br><br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, limit):<br>    <span class="hljs-keyword">if</span> i &lt; <span class="hljs-number">10</span>:<br>        number = <span class="hljs-string">&#x27;0&#x27;</span>+<span class="hljs-built_in">str</span>(i) <span class="hljs-comment">#个位数前面加上‘0’</span><br>    <span class="hljs-keyword">else</span>:<br>        number = <span class="hljs-built_in">str</span>(i)<br><br>    path = <span class="hljs-string">f&#x27;.\img<span class="hljs-subst">&#123;number&#125;</span>.jpg&#x27;</span><br>    url = <span class="hljs-string">f&#x27;https://xxxxxxx.com/ooxx_<span class="hljs-subst">&#123;number&#125;</span>.jpg&#x27;</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;\nDownlaoing img<span class="hljs-subst">&#123;number&#125;</span>&quot;</span>)<br>    wget.download(url, out=path)<br>    <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\n\nDownload Completed. ^_^&quot;</span>)<br></code></pre></td></tr></table></figure><h2 id="待解决"><a href="#待解决" class="headerlink" title="待解决"></a>待解决</h2><p>此次全过程是已知需要下载数量上限，大多数情况下可能不知道其数量上限，后续可继续改进自动获取数量上限并进行下载和反馈给user。<br>下载路径的话，本次为了方便存放在了根目录，指定目录的话可以<code>import os</code>，创建新路径。</p>]]></content>
    
    
    
    <tags>
      
      <tag>python</tag>
      
      <tag>练习</tag>
      
      <tag>脚本</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
